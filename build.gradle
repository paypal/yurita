buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/groups/public" }
        jcenter()
        mavenCentral()
    }
    
    dependencies {
        classpath "org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:0.9.0"
        classpath 'net.researchgate:gradle-release:2.7.0'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
    
}

plugins {
    id 'scala'
    id 'scalaStyle' version "0.9.0"
    id 'checkstyle'
    id "com.github.hierynomus.license" version "0.15.0"
    id 'maven-publish'
}

def sparkVersion = project.ext.get('spark.version')

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

scalaStyle {
    configLocation = "scalastyle_config.xml"
    source = "src/main/scala"
}
checkstyle {
    toolVersion "7.8.2"
    configFile file("checkstyle.xml")
    sourceSets = [project.sourceSets.main]
}
checkstyleMain {
    source='src/main/java'
}
assemble {
    dependsOn scalaStyle
    dependsOn checkstyleMain
    tasks.findByName('checkstyleMain').mustRunAfter 'scalaStyle'
}

dependencies {
    compileOnly "org.apache.spark:spark-core_2.11:$sparkVersion"
    compileOnly "org.apache.spark:spark-sql_2.11:$sparkVersion"
    compile group: 'com.typesafe.scala-logging', name: 'scala-logging_2.11', version: '3.9.0'
    compile files('libs/clust4j-1.2.4-SNAPSHOT.jar')

    // test
    testCompile "org.apache.spark:spark-sql_2.11:$sparkVersion"
    testCompile 'junit:junit:4+'
    testCompile 'org.scalatest:scalatest_2.11:3.0.4'
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}
test.dependsOn scalaTest

license {
    header rootProject.file('codequality/HEADER')
    strictCheck true

    // Variable substitution
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'PayPal Inc'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
